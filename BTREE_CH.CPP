#include <conio.h>
#include <iostream.h>
#include <stdlib.h>
struct node
{
     int data;
     struct node* left;
     struct node* right;
};
int isSumProperty(struct node* node)
{
     int left_data = 0,  right_data = 0;
     if(node == NULL ||(node->left == NULL && node->right == NULL))
     {
	  return 1;
     }
     else
     {
	  if(node->left != NULL)
	  {
	       left_data = node->left->data;
	  }
	  if(node->right != NULL)
	  {
	       right_data = node->right->data;
	  }
	  if((node->data == left_data + right_data)&&
	     isSumProperty(node->left) &&
	     isSumProperty(node->right))
	  {
	       return 1;
	  }
	  else
	  {
	       return 0;
	  }
     }
}
struct node* newNode(int data)
{
     struct node* node =(struct node*)malloc(sizeof(struct node));
     node->data = data;
     node->left = NULL;
     node->right = NULL;
     return(node);
}
void main()
{
     clrscr();
     struct node *root  = newNode(10);
     root->left         = newNode(8);
     root->right        = newNode(2);
     root->left->left   = newNode(3);
     root->left->right  = newNode(5);
     root->right->right = newNode(2);
     if(isSumProperty(root))
     {
	  cout<<"The given tree satisfies the children sum property ";
     }
     else
     {
	  cout<<"The given tree does not satisfy the children sum property ";
     }
     getch();
}